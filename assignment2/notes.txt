[Hello t] [his is t] [he 5th o] [f novemb] [er 201]

1. Padding zeros is bad because there no way to disguish the padding form the message. 

2. We have the same problem if we pad with any other readable character. 

3. We sugest a shcema where we pad with non-readable ascii character. 

4. Example: 10000000 

5. We extend this schem further to encode the number of paddings characters by incrementing the non-readable character by 1 for each additional padding. 

6. For a file that would requier 3 padded characters would have 10000011 10000011 10000011

7. Would would the padding be 4 pads? 10000100 10000100 10000100 10000100 and so on. 

8. THis would be advantages because you could determin how many characters are padding strictly by analysing the last character of the file. 

take the last caracter xor with  bin(128)  = how many paddings

THias tells us how many character we have to cut whne decrypting. 


1000000
1000010
0000010   

def checkpad(plaintext):
    length= len(plaintext)
    if ((length % 8) != 0):
        rem = length%8
        # Pad indicates how many characters we have to add to the end of the file
        pad = 8 - rem
        # the first meaningless number in binary is (10000000) which is equal to 128
        for i in range (pad):
            plaintext= plaintext + chr (128 + pad) 
    return (plaintext)

trim_padding(plaintext)
    get last char of file 
    xor latst char with char(128) 
    if result 1-7 then num ber of pads = result 
    else no padding  



